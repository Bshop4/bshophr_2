<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hr.mapper.MajorChangeMapper">
	<resultMap type="MajorChange" id="MajorChangeMap" >
		<id column="MCH_ID" property="mchId" jdbcType="VARCHAR" />
        <result column="FIRST_KIND_ID" property="firstKindId" jdbcType="VARCHAR" />
        <result column="FIRST_KIND_NAME" property="firstKindName" jdbcType="VARCHAR" />
        <result column="SECOND_KIND_ID" property="secondKindId" jdbcType="VARCHAR" />
        <result column="SECOND_KIND_NAME" property="secondKindName" jdbcType="VARCHAR" />
        <result column="THIRD_KIND_ID" property="thirdKindId" jdbcType="VARCHAR" />
        <result column="THIRD_KIND_NAME" property="thirdKindName" jdbcType="VARCHAR" />
        <result column="MAJOR_KIND_ID" property="majorKindId" jdbcType="VARCHAR" />
        <result column="MAJOR_KIND_NAME" property="majorKindName" jdbcType="VARCHAR" />
        <result column="MAJOR_ID" property="majorId" jdbcType="VARCHAR" />
        <result column="MAJOR_NAME" property="majorName" jdbcType="VARCHAR" />
        <result column="NEW_FIRST_KIND_ID" property="newFirstKindId" jdbcType="VARCHAR" />
        <result column="NEW_FIRST_KIND_NAME" property="newFirstKindName" jdbcType="VARCHAR" />
        <result column="NEW_SECOND_KIND_ID" property="newSecondKindId" jdbcType="VARCHAR" />
        <result column="NEW_SECOND_KIND_NAME" property="newSecondKindName" jdbcType="VARCHAR" />
        <result column="NEW_THIRD_KIND_ID" property="newThirdKindId" jdbcType="VARCHAR" />
        <result column="NEW_THIRD_KIND_NAME" property="newThirdKindName" jdbcType="VARCHAR" />
        <result column="NEW_MAJOR_KIND_ID" property="newMajorKindId" jdbcType="VARCHAR" />
        <result column="NEW_MAJOR_KIND_NAME" property="newMajorKindName" jdbcType="VARCHAR" />
        <result column="NEW_MAJOR_ID" property="newMajorId" jdbcType="VARCHAR" />
        <result column="NEW_MAJOR_NAME" property="newMajorName" jdbcType="VARCHAR" />
        <result column="HUMAN_ID" property="humanId" jdbcType="VARCHAR" />
        <result column="HUMAN_NAME" property="humanName" jdbcType="VARCHAR" />
        <result column="SALARY_STANDARD_ID" property="salaryStandardId" jdbcType="VARCHAR" />
        <result column="SALARY_STANDARD_NAME" property="salaryStandardName" jdbcType="VARCHAR" />
        <result column="SALARY_SUM" property="salarySum" jdbcType="VARCHAR" />
        <result column="NEW_SALARY_STANDARD_ID" property="newSalaryStandardId" jdbcType="VARCHAR" />
        <result column="NEW_SALARY_STANDARD_NAME" property="newSalaryStandardName" jdbcType="VARCHAR" />
        <result column="NEW_SALARY_SUM" property="newSalarySum" jdbcType="VARCHAR" />
        <result column="CHANGE_REASON" property="changeReason" jdbcType="VARCHAR" />
        <result column="CHECK_REASON" property="checkReason" jdbcType="VARCHAR" />
        <result column="CHECK_STATUS" property="checkStatus" jdbcType="VARCHAR" />
        <result column="REGISTER" property="register" jdbcType="VARCHAR" />
        <result column="CHECKER" property="checker" jdbcType="VARCHAR" />
        <result column="REGIST_TIME" property="registTime" jdbcType="TIMESTAMP" />
        <result column="CHECK_TIME" property="checkTime" jdbcType="TIMESTAMP" />
	</resultMap>


	<select id="selectCnt" parameterType="short" resultType="_int">
		select count(*) from (select * from major_change where check_status=#{cs}) as mc
	</select>
	
	<select id="selectCntTwo" resultType="_int">
		select count(*) from  major_change
	</select>
	
	<select id="selectSplit" parameterType="hashmap" resultMap="MajorChangeMap">
		select * from (select * from major_change where check_status=#{cs}) as mc
		<if test="currentPage!=null and pageSize!=null">
			limit #{currentPage},#{pageSize}
		</if>
	</select>
	
	<select id="selectSplitTwo" parameterType="hashmap" resultMap="MajorChangeMap">
		select * from (select * from major_change) as mc
		<if test="currentPage!=null and pageSize!=null">
			limit #{currentPage},#{pageSize}
		</if>
	</select>
	

	
	<select id="selectMajorChangeAll" resultMap="MajorChangeMap">
		select * from major_change
	</select>
	
	<select id="selectMajorChangeById" parameterType="_int" resultMap="MajorChangeMap">
		select * from major_change where mch_id=#{id}
	</select>
	
	<delete id="deleteMajorChangeById" parameterType="_int">
		delete from major_change where mch_id=#{id}
	</delete>
	<insert id="insertMajorChange" parameterType="MajorChange">
		insert into major_change(first_kind_id,first_kind_name,second_kind_id,second_kind_name,third_kind_id,third_kind_name,major_kind_id,major_kind_name,major_id,major_name,new_first_kind_id,new_first_kind_name,new_second_kind_id,new_second_kind_name,new_third_kind_id,new_third_kind_name,new_major_kind_id,new_major_kind_name,new_major_id,new_major_name,human_id,human_name,salary_standard_id,salary_standard_name,salary_sum,new_salary_standard_id,new_salary_standard_name,new_salary_sum,change_reason,check_reason,check_status,register,checker,regist_time,check_time) 
		values(#{firstKindId},#{firstKindName},#{secondKindId},#{secondKindName},#{thirdKindId},#{thirdKindName},#{majorKindId},#{majorKindName},#{majorId},#{majorName},#{newFirstKindId},#{newFirstKindName},#{newSecondKindId},#{newSecondKindName},#{newThirdKindId},#{newThirdKindName},#{newMajorKindId},#{newMajorKindName},#{newMajorId},#{newMajorName},#{humanId},#{humanName},#{salaryStandardId},#{salaryStandardName},#{salarySum},#{newSalaryStandardId},#{newSalaryStandardName},#{newSalarySum},#{changeReason},#{checkReason},#{checkStatus},#{register},#{checker},#{registTime},#{checkTime}) 
	</insert>
	
	<update id="updateMajorChange" parameterType="MajorChange">
		UPDATE MAJOR_CHANGE
        <set>
            <if test="firstKindId != null">
                FIRST_KIND_ID = #{firstKindId},
            </if>
            <if test="firstKindName != null">
                FIRST_KIND_NAME = #{firstKindName},
            </if>
            <if test="secondKindId != null">
                SECOND_KIND_ID = #{secondKindId},
            </if>
            <if test="secondKindName != null">
                SECOND_KIND_NAME = #{secondKindName},
            </if>
            <if test="thirdKindId != null">
                THIRD_KIND_ID = #{thirdKindId},
            </if>
            <if test="thirdKindName != null">
                THIRD_KIND_NAME = #{thirdKindName},
            </if>
            <if test="majorKindId != null">
                MAJOR_KIND_ID = #{majorKindId},
            </if>
            <if test="majorKindName != null">
                MAJOR_KIND_NAME = #{majorKindName},
            </if>
            <if test="majorId != null">
                MAJOR_ID = #{majorId},
            </if>
            <if test="majorName != null">
                MAJOR_NAME = #{majorName},
            </if>
            <if test="newFirstKindId != null">
                NEW_FIRST_KIND_ID = #{newFirstKindId},
            </if>
            <if test="newFirstKindName != null">
                NEW_FIRST_KIND_NAME = #{newFirstKindName},
            </if>
            <if test="newSecondKindId != null">
                NEW_SECOND_KIND_ID = #{newSecondKindId},
            </if>
            <if test="newSecondKindName != null">
                NEW_SECOND_KIND_NAME = #{newSecondKindName},
            </if>
            <if test="newThirdKindId != null">
                NEW_THIRD_KIND_ID = #{newThirdKindId},
            </if>
            <if test="newThirdKindName != null">
                NEW_THIRD_KIND_NAME = #{newThirdKindName},
            </if>
            <if test="newMajorKindId != null">
                NEW_MAJOR_KIND_ID = #{newMajorKindId},
            </if>
            <if test="newMajorKindName != null">
                NEW_MAJOR_KIND_NAME = #{newMajorKindName},
            </if>
            <if test="newMajorId != null">
                NEW_MAJOR_ID = #{newMajorId},
            </if>
            <if test="newMajorName != null">
                NEW_MAJOR_NAME = #{newMajorName},
            </if>
            <if test="humanId != null">
                HUMAN_ID = #{humanId},
            </if>
            <if test="humanName != null">
                HUMAN_NAME = #{humanName},
            </if>
            <if test="salaryStandardId != null">
                SALARY_STANDARD_ID = #{salaryStandardId},
            </if>
            <if test="salaryStandardName != null">
                SALARY_STANDARD_NAME = #{salaryStandardName},
            </if>
            <if test="salarySum != null">
                SALARY_SUM = #{salarySum},
            </if>
            <if test="newSalaryStandardId != null">
                NEW_SALARY_STANDARD_ID = #{newSalaryStandardId},
            </if>
            <if test="newSalaryStandardName != null">
                NEW_SALARY_STANDARD_NAME = #{newSalaryStandardName},
            </if>
            <if test="newSalarySum != null">
                NEW_SALARY_SUM = #{newSalarySum},
            </if>
            <if test="changeReason != null">
                CHANGE_REASON = #{changeReason},
            </if>
            <if test="checkReason != null">
                CHECK_REASON = #{checkReason},
            </if>
            <if test="checkStatus != null">
                CHECK_STATUS = #{checkStatus},
            </if>
            <if test="register != null">
                REGISTER = #{register},
            </if>
            <if test="checker != null">
                CHECKER = #{checker},
            </if>
            <if test="registTime != null">
                REGIST_TIME = #{registTime},
            </if>
            <if test="checkTime != null">
                CHECK_TIME = #{checkTime}
            </if>
        </set>
        WHERE MCH_ID = #{mchId}	</update>
</mapper>